#------------------------------------------------------------
# RT-Component manager configuration
#
# See details in the following reference manual or web page.
# http://www.openrtm.org/openrtm/en/content/configuration
# http://www.openrtm.org/openrtm/ja/content/rtcconf%E8%A8%AD%E5%AE%9A%E9%A0%85%E7%9B%AE%E4%B8%80%E8%A6%A7
# http://www.openrtm.org/openrtm/ko/content/rtcconf-%EC%84%A4%EC%A0%95-%ED%95%AD%EB%AA%A9-%EC%9D%BC%EB%9E%8C
#

#------------------------------------------------------------
# Typically used configuration parameters
#
# corba.name_servers: localhost, 192.168.0.1
# corba.endpoints: <interface addess>, <interface addess>
# logger.enable: YES
# logger.file_name: ./rtc%p.log
# logger.log_level: NORMAL
#
# The following properties should be specified in component specific
# configuration files.
# exec_cxt.periodic.type: PeriodicExecutionContext
# exec_cxt.periodic.rate: 1000

# Component specific configruation files:
# If you want to load component specific configuration file, please
# uncomment the following line.
#
# PointCloud.RealSenseToPC.config_file: RealSenseToPC.conf
# or
# PointCloud.RealSenseToPC0.config_file: RealSenseToPC0.conf
# PointCloud.RealSenseToPC1.config_file: RealSenseToPC1.conf
# PointCloud.RealSenseToPC2.config_file: RealSenseToPC2.conf
#
#------------------------------------------------------------

PointCloud.RealSenseToPC.config_file: RealSenseToPC.conf

#
# Please delete the following part if you are familiar with OpenRTM's
# configuration parameters.
#
##----------------------------------------------------------------------
##
## RT-Component manager configurations
##
##----------------------------------------------------------------------

##------------------------------------------------------------
## Configuration version (optional) 
##
# config.version: 1.0

##------------------------------------------------------------
## OpenRTM-aist version (optional)
##
# openrtm.version: 1.0.0

##------------------------------------------------------------
## The name of manager (default = manager)
##
# manager.name: manager

##------------------------------------------------------------
## Master manager
## - manager.is_master: YES/NO, This process made a master or not.
## - manager.corba_servant: YES/NO, create manager's corba service or not
## - corba.master_manager: <host_name>:<port>, master manager's location
# manager.is_master: YES
# manager.corba_servant: YES
# corba.master_manager: localhost:2810

##------------------------------------------------------------
## Manager auto shutdown options
## - manager.shutdown_on_nortcs: YES/NO, 
##   process will be shutdown in case no rtc exists when rtc is deleted.
## - manager.shutdown_auto:
##   process will be shutdown in case no rtc exists on periodic check.
# manager.shutdown_on_nortcs: YES
# manager.shutdown_auto: YES
# manager.auto_shutdown_duration: 10.0

##============================================================
## CORBA configuration
##============================================================
##
## CORBA ORB's arguments
##
## ORB specific command line options given to ORB_init().
## See your ORB documentation.
##
## Example:
##   corba.args: -ORBInitialHost myhost -ORBInitialPort 8888
##
##
# corba.args:

##
## ORB endpoint
##
## If you have two or more network interfaces, ORB endpoint address and/or
## port have to be specified. If hostname or port number is abbreviated,
## default interface or port number is used. At least one colon ':'
## is needed when you specify this option.
##
## Examples:
##   corba.endpoint: myhost:      (use myhost and default port)
##   corba.endpoint: :9876        (use default addr and port 9876)
##   corba.endpoint: myhost:9876  (use myhost and port 9876)
##
# corba.endpoint:

##
## Multiple endpoint options (experimental)
##
## Multiple endpoint addresses and ports can be specified using this option.
##
## Example:
##   corba.endpoints: 192.168.1.10:1111, 192.168.10.11:2222
##   corba.endpoints: 192.168.1.10, 192.168.10.11
##   corba.endpoints: all
##
# corba.endpoints:


##
## CORBA name server setting
##
## Multiple name servers can be specified separating by comma.
## If port number is abbreviated, default port number is used.
## The default port number is depend on ORB implementation.
##
## Examples:
##   corba.nameservers: openrtm.aist.go.jp:9876
##   corba.nameservers: rtm0.aist.go.jp, rtm1.aist.go.jp, rtm2.aist.go.jp
##
# corba.nameservers: localhost

##
## IOR host address replacement by guessed endpoint from routing (experimental)
##
## This option replaces a host address with an endpoint that is guessed
## by route information to nameserver's address. This option may be
## effective for CORBA implementation that does not supports IOR's
## multiple profile or alternate IIOP address. However, since other
## object references that are obtained from RT-Components or other are
## not modified by this rule, other RTCs that are connected to this RTC
## have to also support IOR multiple profile feature.  When this option
## is used, corba.endpoints option should also be specified with
## multiple endpoints.
##
# corba.nameservice.replace_endpoint: NO

##
## IOR alternate IIOP addresses
##
## This option adds alternate IIOP addresses into the IOR Profiles.
## IOR can include additional endpoints for a servant. It is almost
## same as "corba.endpoints" option, but this option does not create
## actual endpoint on the ORB. (corba.endpoints try to create actual
## endpoint, and if it cannot be created, error will be returned.)
## This option just add alternate IIOP endpoint address information to
## an IOR.
##
## This option can be used when RTCs are located inside of NAT or
## router.  Generally speaking, RTCs in a private network cannot
## connect to RTCs in the global network, because global client cannot
## reach to private servants. However, if route (or NAT) is properly
## configured for port forwarding, global RTCs can reach to RTCs in
## private network.
##
## A setting example is as follows.
## 1) Configure your router properly for port-forwarding.
##    ex. global 2810 port is forwarded to private 2810
## 2) Set the following options in rtc.conf
##  corba.nameservers: my.global.nameserver.com <- name server in global network
##  corba.endpoints: :2810 <- actual port number
##  corba.additional_ior_addresses: w.x.y.z:2810 <- routers global IP addr/port
## 3) Launch global RTCs and private RTC, and connect them.
##
# corba.alternate_iiop_addresses: addr:port

##============================================================
## Naming configurations
##============================================================
##
## Enable/Disable naming functions
##
# naming.enable: YES

##
## Naming Types
##
## Now only "corba" is supported.
##
# naming.type: corba

##
## Naming format
##
## The name format of components that is bound to naming services.
## The delimiter between names is "/".
## The delimiter between name and kind is ".".
##
## example: (OpenRTM-aist-0.2.0 style)
##       %h.host_cxt/%M.mgr_cxt/%c.cat_cxt/%m.mod_cxt/%n.rtc
## This is formatted according to the following replacement rules.
##
## %n: The instance name of the component.
## %t: The type name of the component.
## %m: The module name of the component.
## %v: The version of the component.
## %V: The component vendor.
## %c: The category of the component.
## %h: The hostname.
## %M: The manager name.
## %p: PID of the manager.
##
# naming.formats: %h.host/%n.rtc

##
## Auto update to Naming Server
##
# naming.update.enable: YES
##
## Update interval [s] for auto update
##
# naming.update.interval: 10.0
##
## Rebind references in auto update
##
# naming.update.rebind: NO

## End of Naming configuration section
##------------------------------------------------------------

##============================================================
## Module management
##============================================================
##
## Loadable module search path list
##
## Manager searches loadable modules from the specified search path list.
## Path list elements should be separated by comma.
## Path delimiter is '/' on UNIX, and '\\' on Windows
## Valid path examples:
##   manager.modules.load_path: C:/Program Files/OpenRTM-aist,  \
##   			       C:\\Program Files\\OpenRTM-aist
##   manager.modules.load_path: /usr/lib, /usr/local/lib,       \
##   			       /usr/local/lib/OpenRTM-aist/libs
##
# manager.modules.load_path: ./

##
## Preload module list
##
## Manager can load loadable modules before starting up.
## Loadable modules, which is specified only as its file name, is searched
## in each module load path specified in the "manager.modules.load_path".
## If the "manager.modules.abs_path_allowed" option is YES, loadable file
## can be specified as full-path name,
##
## Valid settings:
## manager.modules.preload: ConsoleIn.dll, ConsoleOut.dll
## manager.modules.preload: ConsoleIn.so, ConsoleOut.so
## manager.modules.abs_path_allowed: YES
## manager.modules.preload: /usr/lib/OpenRTM-aist/ConsoleIn.so
##
# manager.modules.preload:

##
## Permission flag of absolute module path
##
## If this option is "YES", absolute path specification for module is allowed.
##
# manager.modules.abs_path_allowed: YES

##
## The following options are not implemented yet. 
##
## manager.modules.config_ext:
## manager.modules.config_path:
## manager.modules.detect_loadable:
## manager.modules.init_func_suffix:
## manager.modules.init_func_prefix:
## manager.modules.download_allowed:
## manager.modules.download_dir:
## manager.modules.download_cleanup:
##

##
## Advance component creation
##
## This option specifies components' names (module name) creating in advance
## before starting the manager's event-loop. The components' factories should
## be registered by manager.module.preload option or statically linked to the
##  manager.
##
## Example:
## manager.components.precreate: ConsoleIn, ConsoleOut, SeqIn, SeqOut
##
# manager.components.precreate: 


##============================================================
## Logger configurations
##============================================================
##
## Enable/Disable logger [YES/NO]
# logger.enable: YES

##
## Log file name (default = ./rtc%p.log)
##
## %p: PID
##
# logger.file_name: ./rtc%p.log

##
## Log date format (default = %b %d %H:%M:%S)
##
## The following strftime(3) like format expression is available.
## If no prefix is needed, use "No" or "Disable".
## 
## %a abbreviated weekday name 
## %A full weekday name 
## %b abbreviated month name 
## %B full month name 
## %c the standard date and time string 
## %d day of the month, as a number (1-31) 
## %H hour, 24 hour format (0-23) 
## %I hour, 12 hour format (1-12) 
## %j day of the year, as a number (1-366) 
## %m month as a number (1-12).
##    Note: some versions of Microsoft Visual C++ may use values that range
##    from 0-11. 
## %M minute as a number (0-59) 
## %p locale's equivalent of AM or PM 
## %Q millisecond as a number (0-999) from ver 1.1
## %q microsecond as a number (0-999) from ver 1.1
## %S second as a number (0-59) 
## %U week of the year, sunday as the first day 
## %w weekday as a decimal (0-6, sunday=0) 
## %W week of the year, monday as the first day 
## %x standard date string 
## %X standard time string 
## %y year in decimal, without the century (0-99) 
## %Y year in decimal, with the century 
## %Z time zone name 
## %% a percent sign 
##  
##
## logger.date_format: No
## logger.date_format: Disable
## logger.date_format: [%Y-%m-%dT%H.%M.%S%Z]     // W3C standard format
## logger.date_format: [%b %d %H:%M:%S]          // Syslog format
## logger.date_format: [%a %b %d %Y %H:%M:%S %Z] // RFC2822 format
## logger.date_format: [%a %b %d %H:%M:%S %Z %Y] // data command format
## logger.date_format: [%Y-%m-%d %H.%M.%S]
##
# logger.date_format: %b %d %H:%M:%S

##
## Log level (default = NORMAL)
##
## The following LogLevels are allowed.
## SILENT, ERROR, WARN, NORMAL, INFO, DEBUG, TRACE, VERBOSE, PARANOID
##
##
## SILENT  : completely silent
## ERROR   : includes (ERROR)
## WARN    : includes (ERROR, WARN)
## INFO    : includes (ERROR, WARN, INFO)
## NORMAL  : includes (ERROR, WARN, INFO, NORMAL)
## DEBUG   : includes (ERROR, WARN, INFO, NORMAL, DEBUG)
## TRACE   : includes (ERROR, WARN, INFO, NORMAL, DEBUG, TRACE)
## VERBOSE : includes (ERROR, WARN, INFO, NORMAL, DEBUG, TRACE, VERBOSE)
## PARANOID: includes (ERROR, WARN, INFO, NORMAL, DEBUG, TRACE, VERBOSE, PARA)
##
## Warning!!!
## "TRACE", "VERBOSE", "PARANOID" logging level will create a huge log file!!
## "PARANOID" log level will tangle the log file.
##
# logger.log_level: NORMAL

##============================================================
## Timer configuration
##============================================================
##
## Enable/disable timer function
##
# timer.enable: YES

##
## Timer clock tick setting [s]
##
# timer.tick: 0.1

##============================================================
## Execution context settings
##============================================================
##
## Periodic type ExecutionContext
##
## Other availabilities in OpenRTM-aist
##
## - ExtTrigExecutionContext: External triggered EC. It is embedded in
##                            OpenRTM library.
## - OpenHRPExecutionContext: External triggred paralell execution
##                            EC. It is embedded in OpenRTM
##                            library. This is usually used with
##                            OpenHRP3.
## - RTPreemptEC:             Real-time execution context for Linux
##                            RT-preemptive pathed kernel.
## - ArtExecutionContext:     Real-time execution context for ARTLinux
##                            (http://sourceforge.net/projects/art-linux/)
##
# exec_cxt.periodic.type: PeriodicExecutionContext

##
## The execution cycle of ExecutionContext
##
# exec_cxt.periodic.rate: 1000

##============================================================
## SDO service settings
##============================================================
##
## SDO service provider settings
##
# sdo.service.provider.available_services: [read only]
# sdo.service.provider.enabled_services: ALL
# sdo.service.provider.providing_services: [read only]
##
## SDO service consumer settings
##
# sdo.service.consumer.available_services: [read only]
# sdo.service.consumer.enabled_services: ALL
corba.nameservers: localhost
naming.formats: %n.rtc
corba.args: -ORBgiopMaxMsgSize 20971520
logger.enable: NO
